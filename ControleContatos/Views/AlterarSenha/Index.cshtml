@using ControleContatos.Enums
@model AlterarSenhaModel
@{
    ViewData["Title"] = "Alterar senha do usuario";
}
<div class="text-center">
    <h1 class="display-4">Alterar senha do usuario</h1>
</div>

    @if (TempData["MensagemSucesso"] != null)
    {
    <div class="alert alert-success" role="alert">
        <button type="button" class="btn btn-success btn-sm close-alert" arial-label="Close">x</button>
        @TempData["MensagemSucesso"]
    </div>    
    }
    
    @if (TempData["MensagemErro"] != null)
    {
    <div class="alert alert-danger" role="alert">
        <button type="button" class="btn btn-danger btn-sm close-alert" arial-label="Close">x</button>
        @TempData["MensagemErro"]
    </div>    
    }
<form asp-controller="AlterarSenha" asp-action="Alterar" method="post">

  <div class="form-group">
    <label for="senhaAtual">Senha atual</label>
    <input type="password" asp-for="SenhaAtual" class="form-control" placeholder="Digite a senha atual do usuario">
    @Html.ValidationMessageFor(x => x.SenhaAtual)
  </div>

  <div class="form-group">
    <label for="novaSenha">Nova Senha</label>
    <input type="password" asp-for="NovaSenha" class="form-control" placeholder="Digite a nova senha do usuario">
    @Html.ValidationMessageFor(x => x.NovaSenha)
  </div>

  <div class="form-group">
    <label for="ConfirmarSenha">Confirmar Senha</label>
    <input type="password" asp-for="ConfirmarNovaSenha" class="form-control" placeholder="Digite a confirmação da nova senha do usuario">
    @Html.ValidationMessageFor(x => x.ConfirmarNovaSenha)
  </div>


  <button type="submit" class="btn btn-primary btn-block">Alterar</button>
  <a class="btn btn-secondary btn-block" asp-controller="Home" asp-action="index" role="button">Voltar</a>
</form>